import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import random
from matplotlib.pyplot import MultipleLocator
from matplotlib.legend_handler import HandlerPathCollection

#Positive, Recommendation, Probability, Comprehensive
def Draw_Tact():
    tabn1 = [0.5, 0.4332022408006807, 0.3481856531276937, 0.3198674156009272, 0.314950764622772, 0.3043753486752265, 0.28515928382228517, 0.2647698466843201, 0.21278642695972377, 0.20629375518799928, 0.2046239714013813, 0.20020992692853817, 0.19644480971946648, 0.1961592595198521, 0.19593202564657844, 0.1960712104816656, 0.1960506684761951, 0.1962723914589585, 0.19291302781192232, 0.19292301908346848, 0.18871540272091542, 0.18867033457160676, 0.1886249530115311, 0.1885511073635801, 0.18860708693171702, 0.18858386364831428, 0.18867574209815377, 0.18862735205246522, 0.18522128966362514, 0.18546185704913568, 0.18556792963733393, 0.18546958855395956, 0.18532740659504807, 0.1852806774514079, 0.18522990896291452, 0.18559675248115814, 0.18555740432738282, 0.18554729165700282, 0.1856531185474063, 0.18564070853920175, 0.18559476105688957]
    tabn2 = [0.5, 0.42948017182802034, 0.3776098177013404, 0.37384656524408283, 0.37407608319821856, 0.3646278822685241, 0.3512831149790454, 0.3343729866381951, 0.28280312435477856, 0.2773067278081873, 0.27744805638685544, 0.27056035646058757, 0.26725851512582754, 0.2672111470608198, 0.2671949163195533, 0.2670095510800273, 0.2670470777840442, 0.2672596654772947, 0.26378709038614473, 0.2638133710568099, 0.25939373608444505, 0.25918993005061447, 0.25932438952056314, 0.25907881892595513, 0.25893571515090685, 0.2589255611450718, 0.2589619303697313, 0.25891985472103646, 0.2553367114654598, 0.25522171337154714, 0.25519351086552, 0.25514170725837304, 0.2552372505866888, 0.25511126309396, 0.25514228060461785, 0.2554316491102514, 0.2555538916309334, 0.2555199141003787, 0.2557358814392995, 0.25569433450582274, 0.25572677688462625]
    tn1 = [0.5, 0.6359878950445049, 0.7412914608278246, 0.7722142069957196, 0.7815387794740025, 0.7948088405625958, 0.8301604335122421, 0.8578123442731753, 0.9513118661965893, 0.9608910307554297, 0.9644109522148431, 0.9700753643258123, 0.9702548566819106, 0.9702772138192614, 0.9721186980223064, 0.9756565689868002, 0.9757161949716445, 0.9757441090350181, 0.9775146774648649, 0.9775204450688413, 0.9775379754592021, 0.9775500681495403, 0.9792922304120576, 0.9793118703781191, 0.9793183707803457, 0.979319843163497, 0.9810762220120719, 0.9810817715039504, 0.9810844904267924, 0.9828395115889884, 0.9828484075425973, 0.9845584485045401, 0.9846062591526035, 0.9846103086642605, 0.9846120091855227, 0.9863662523926294, 0.9863711298320881, 0.9863722654416825, 0.9863753776623329, 0.9863777700399482, 0.9863787301211326]
    tn2 = [0.5, 0.6359878950445049, 0.7046965162403684, 0.7147787846201624, 0.7202250504624517, 0.7314860509978337, 0.765853021910658, 0.791104011814271, 0.8848870032051657, 0.8949231343504979, 0.8984289678823454, 0.9044016248574631, 0.9046999818529992, 0.9047379919333464, 0.9065955770184561, 0.9101547139651165, 0.9102182931340989, 0.910257469570654, 0.9120357858193557, 0.9120431679179826, 0.9120680229738165, 0.9120863985773013, 0.9138294741862952, 0.913851363474711, 0.9138608983937059, 0.9138630220158008, 0.915620647300051, 0.9156278949554171, 0.9156314518664933, 0.917388714424642, 0.9173996422590552, 0.9191082303317762, 0.9191591876695527, 0.9191646787189959, 0.9191668855907849, 0.9209153160439104, 0.9209257140305493, 0.9209273130371082, 0.9209316478279856, 0.9209352014535721, 0.920936527567575]
    t = [i for i in range(41)]
    #plt.figure(figsize=(5, 5))
    #plt.title('Comparison of Positive trust')
    plt.xlabel('Time')
    plt.ylabel('Active Trust')
    
    plt.plot(t, tabn1, color = '#152eff', linestyle = '-', marker = '^', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{mal}$')
    plt.plot(t, tn1, color = '#04f489', linestyle = '-', marker = 'o', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{nor}$')
    
    plt.plot(t, tabn2, color = '#001146', linestyle = '-', marker = '*', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{mal}$')
    plt.plot(t, tn2, color = '#005249', linestyle = '-', marker = 'd', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{nor}$')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.1)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0.15, 1)
    
    d_act_n = []
    d_act_o = []
    for i in range(0, 41):
        d_act_n.append(tn1[i] - tabn1[i])
        d_act_o.append(tn2[i] - tabn2[i])
    print(d_act_n)
    print(d_act_o)

    plt.legend(loc=0, framealpha = 0.5, fontsize = 'xx-large') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('tact.png')
    plt.show()
#Draw_Tact()

def Draw_Trec():
    #tabn1 = [0.5,0.46092689469114234, 0.4345410536266157, 0.422935109339595, 0.4248233025170409, 0.4206565276940382, 0.40362139730499574, 0.3813713565072184, 0.31765223818798893, 0.31787555660405475, 0.3206299600318382, 0.31688312894886367, 0.3172371995332422, 0.3173070712705801, 0.31294661236149474, 0.3126729302418025, 0.3132374384324584, 0.30933320610842596, 0.30912900429907486, 0.3096815434146557, 0.30605664113981146, 0.3063411529984817, 0.3062339540770888, 0.30655832349587214, 0.30672202679162586, 0.3067293894583133, 0.3067526347888905, 0.306768894635719, 0.3020518119153699, 0.3018675295039914, 0.30243335088748735, 0.30235811147020786, 0.3025118927866805, 0.30259567422860395, 0.3026012183947028, 0.29831433694294307, 0.29845888152739014, 0.29852075633333397, 0.2987863460498952, 0.29881775696352486, 0.2988358042287459]
    #tabn2 = [0.5,0.4571853032967468, 0.3963037273790639, 0.3637909665859604, 0.36513755229482414, 0.36134349757021916, 0.3429094148477111, 0.3142582237213713, 0.24766094959132023, 0.2459534784770195, 0.2451844264159131, 0.24695417549494536, 0.2478816272976404, 0.24840535063968444, 0.24827862644675064, 0.24831420284744438, 0.24888300868687863, 0.24901244375043768, 0.24893327675680338, 0.2493421671002623, 0.2469481551389372, 0.24680309438381326, 0.2466201650854392, 0.24695401008462226, 0.24716044353787514, 0.2471517023593936, 0.24310247494229043, 0.2431217424371949, 0.24288962063003947, 0.24163908548223714, 0.24192206180273704, 0.24188111686406744, 0.24183698890019997, 0.241945264693372, 0.24198086967138518, 0.23799265383478102, 0.2379062471402795, 0.2379381769047702, 0.23802564242355834, 0.2380724140456958, 0.23805356833654814]
    #tn1 = [0.5,0.5805463350400895, 0.587372293846817, 0.6174145342072906, 0.6352440478323678, 0.6464720604123126, 0.6589526262626972, 0.6706767789800411, 0.6868352982799514, 0.7275023852326796, 0.7398598722417448, 0.7458636039579812, 0.7519036561199101, 0.7542803788611251, 0.7554045311667934, 0.7605864087293575, 0.7655272077789902, 0.7660327140062042, 0.7706411086954772, 0.7745630079558432, 0.7754496161319703, 0.7770660392814108, 0.7782761813857694, 0.7792549019110958, 0.7794538257207235, 0.7794759719943477, 0.7794875985838997, 0.7794945780592016, 0.7788106522553991, 0.7816115914192003, 0.7834319851233216, 0.7846382793949926, 0.7856922124345431, 0.7860300432536497, 0.7860961973997462, 0.7854917918377963, 0.786836703573758, 0.7871198246730329, 0.7871884317190355, 0.7871569376468724, 0.7871469437467826]
    #tn2 = [0.5,0.580818636848338, 0.5940813576880352, 0.6730174241856449, 0.7046631166131738, 0.7199988579934772, 0.740093377252097, 0.7602708138065233, 0.7989851846307369, 0.8610102562412064, 0.8797216955835047, 0.8898679942880605, 0.8957999624390317, 0.897716278475198, 0.8992309849675151, 0.9021243702391408, 0.9041191511824391, 0.9045269190202652, 0.9073536575765242, 0.9092821064392205, 0.908212525463691, 0.9084343856402989, 0.9093955623684149, 0.9103165176203394, 0.9104825220195569, 0.9104867566665007, 0.9089412285043468, 0.9094346381043585, 0.910431640622877, 0.9128874204303244, 0.9146357292454238, 0.9158919421197043, 0.9169474015341802, 0.9172453848494962, 0.9173003119281241, 0.9157480106271049, 0.9162623833158632, 0.916385158780344, 0.9164121790925156, 0.9164100753318773, 0.9164041937005633]
    tabn1 = [0.5, 0.4489178539422858, 0.36797726290136473, 0.3591020388158112, 0.3560025830065729, 0.3460140293065474, 0.3261924909829235, 0.31227010264729876, 0.2694352519160899, 0.2688083038770436, 0.2688034231680617, 0.2691290027137269, 0.2657418969975707, 0.2657629385683595, 0.26437032440485597, 0.26372417015015415, 0.2640970144228888, 0.26377858945230326, 0.2605209138131929, 0.2609094236690303, 0.25695434677101736, 0.2567372049861993, 0.25665766189740724, 0.25669697137924646, 0.25668542593006793, 0.2567139125333047, 0.25639591392835526, 0.2564882127941248, 0.2539490854075678, 0.2541015950867436, 0.25420176179754334, 0.25402890116694754, 0.25401657901522806, 0.254015455174829, 0.2540472024403131, 0.25404900991728485, 0.2541026686489596, 0.2540780819759038, 0.2541665230002072, 0.25399177546674045, 0.2540333968835301]
    tabn2 = [0.5, 0.444873250431639, 0.3992017204018059, 0.38957863173019303, 0.38814395740987024, 0.38692453068620475, 0.37611030392120326, 0.36668738477576085, 0.3197988443614088, 0.3183625569214324, 0.31787036457830753, 0.3177014373477266, 0.3144548131483211, 0.3154303445292592, 0.31531772907386924, 0.31496285075223357, 0.31538719846136964, 0.3149448166382907, 0.3119954533246475, 0.31216483977789344, 0.3082127985849545, 0.3085112479613785, 0.3083563695442537, 0.3085274325278403, 0.3087600994194893, 0.30876258385399086, 0.30858946204620186, 0.3086530998610711, 0.3054605559577822, 0.3072340995433871, 0.3073176109467277, 0.307046192574374, 0.3068769193981485, 0.3069815683761308, 0.3070091549216775, 0.3066357329860316, 0.3068353295731319, 0.3068696616293154, 0.3067290439035042, 0.30661229586531485, 0.3066014114148573]
    tn1 = [0.5, 0.6159560393853029, 0.6594954423340301, 0.6876648164959192, 0.7010695879665285, 0.7096576534694532, 0.7259558720455833, 0.7538478576807747, 0.7990249558123855, 0.843289562111645, 0.8603180171690601, 0.8695045347682072, 0.8742885962898929, 0.8763961690211376, 0.8784645260736036, 0.8814348159186385, 0.8835008893596576, 0.8844126859690661, 0.8845173464577247, 0.8856634467413832, 0.8851768360439787, 0.885916265418361, 0.8868501803303356, 0.8877028742220429, 0.8881019342596345, 0.8882994058670293, 0.8891452808100629, 0.8900370392863812, 0.889177936796826, 0.8903413759084583, 0.8911359783550826, 0.8922024975189935, 0.8929448164228279, 0.8933003567570921, 0.8934173371635233, 0.8941903850726621, 0.8951568262517616, 0.8954635921434139, 0.8956342239218641, 0.8957612722195691, 0.8958049039745444]
    tn2 = [0.5, 0.615614447134028, 0.6328408836796953, 0.6616970937832716, 0.6763249202786984, 0.6830147598685474, 0.7010146214352356, 0.7222036244128406, 0.766973130537949, 0.8102388462287997, 0.8273468223602106, 0.8362767836810294, 0.8403731619491989, 0.8426445740324099, 0.8441927047724661, 0.8467910166818456, 0.8486288145091498, 0.8492814165057935, 0.848981060306701, 0.8501258509316457, 0.849070869520465, 0.8498315671261606, 0.8508506884174268, 0.8516295945455455, 0.8518871403562317, 0.8519645949312474, 0.8527846168388178, 0.8535189732820222, 0.8523687352937144, 0.853681747378719, 0.8543623195312943, 0.8552768491348154, 0.8560269705227272, 0.8562208833074858, 0.8563039919905744, 0.8571084283603286, 0.8578325568542536, 0.8580162995330591, 0.8580815181587319, 0.858082491595727, 0.8580587429001393]
    t = [i for i in range(41)]

    #plt.title('Comparison of Recommendation trust')
    plt.xlabel('Time')
    plt.ylabel('Recommendation Trust')
    
    plt.plot(t, tabn1, color = '#152eff', linestyle = '-', marker = '^', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{mal}$')
    plt.plot(t, tn1, color = '#04f489', linestyle = '-', marker = 'o', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{nor}$')
    
    plt.plot(t, tabn2, color = '#001146', linestyle = '-', marker = '*', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{mal}$')
    plt.plot(t, tn2, color = '#005249', linestyle = '-', marker = 'd', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{nor}$')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.1)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0.22, 0.92)

    d_act_n = []
    d_act_o = []
    for i in range(0, 41):
        d_act_n.append(tn1[i] - tabn1[i])
        d_act_o.append(tn2[i] - tabn2[i])
    print(d_act_n)
    print(d_act_o)
    
    plt.legend(loc=0, framealpha = 0.5, fontsize = 'xx-large') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('trec.png')
    plt.show()
#Draw_Trec()

def Draw_diff():
    #0.712459379605772 0.5770879567325934
    #1.2345767595630244
    #act:
    #d1 = [0.0, 0.20278565424382422, 0.3931058077001309, 0.45234679139479245, 0.4665880148512305, 0.49043349188736934, 0.5450011496899569, 0.5930424975888553, 0.7385254392368654, 0.7545972755674304, 0.7597869808134617, 0.7698654373972742, 0.773810046962444, 0.7741179542994092, 0.776186672375728, 0.7795853585051347, 0.7796655264954494, 0.7794717175760596, 0.7846016496529425, 0.7845974259853727, 0.7888225727382867, 0.7888797335779335, 0.7906672774005266, 0.790760763014539, 0.7907112838486287, 0.7907359795151827, 0.7924004799139182, 0.7924544194514851, 0.7958632007631672, 0.7973776545398528, 0.7972804779052634, 0.7990888599505805, 0.7992788525575554, 0.7993296312128526, 0.7993821002226082, 0.8007694999114713, 0.8008137255047052, 0.8008249737846798, 0.8007222591149266, 0.8007370615007464, 0.8007839690642431]
    #d2 = [0.0, 0.20650772321648458, 0.32708669853902805, 0.3409322193760796, 0.3461489672642331, 0.3668581687293096, 0.41456990693161255, 0.45673102517607594, 0.602083878850387, 0.6176164065423105, 0.62098091149549, 0.6338412683968755, 0.6374414667271716, 0.6375268448725266, 0.6394006606989028, 0.6431451628850893, 0.6431712153500546, 0.6429978040933593, 0.648248695433211, 0.6482297968611727, 0.6526742868893715, 0.6528964685266869, 0.6545050846657321, 0.6547725445487558, 0.654925183242799, 0.654937460870729, 0.6566587169303197, 0.6567080402343806, 0.6602947404010335, 0.6621670010530949, 0.6622061313935352, 0.6639665230734032, 0.663921937082864, 0.664053415625036, 0.664024604986167, 0.665483666933659, 0.6653718223996159, 0.6654073989367295, 0.6651957663886862, 0.6652408669477494, 0.6652097506829489]
    
    #rec:
    #d1 = [0.0, 0.16703818544301707, 0.2915181794326654, 0.33756277768010795, 0.3450670049599556, 0.3636436241629058, 0.3997633810626598, 0.4415777550334759, 0.5295897038962956, 0.5744812582346014, 0.5915145940009984, 0.6003755320544804, 0.6085466992923221, 0.6106332304527782, 0.6140942016687476, 0.6177106457684843, 0.6194038749367689, 0.6206340965167628, 0.6239964326445318, 0.624754023072353, 0.6282224892729613, 0.6291790604321617, 0.6301925184329283, 0.6310059028427963, 0.6314165083295665, 0.6315854933337246, 0.6327493668817077, 0.6335488264922564, 0.6352288513892582, 0.6362397808217146, 0.6369342165575393, 0.638173596352046, 0.6389282374075997, 0.639284901582263, 0.6393701347232102, 0.6401413751553773, 0.641054157602802, 0.6413855101675101, 0.641467700921657, 0.6417694967528287, 0.6417715070910143]
    #d2 = [0.0, 0.17074119670238902, 0.24063916327788937, 0.26511846205307854, 0.27818096286882815, 0.2960902291823427, 0.32490431751403237, 0.35551623963707973, 0.4471742861765402, 0.4918762893073673, 0.5094764577819031, 0.5185753463333028, 0.5259183488008778, 0.5272142295031507, 0.5288749756985969, 0.531828165929612, 0.5332416160477802, 0.5343365998675027, 0.5369856069820534, 0.5379610111537523, 0.5408580709355104, 0.5413203191647821, 0.5424943188731731, 0.5431021620177052, 0.5431270409367424, 0.5432020110772566, 0.5441951547926159, 0.544865873420951, 0.5469081793359322, 0.546447647835332, 0.5470447085845666, 0.5482306565604413, 0.5491500511245788, 0.549239314931355, 0.5492948370688968, 0.5504726953742971, 0.5509972272811217, 0.5511466379037437, 0.5513524742552277, 0.5514701957304122, 0.551457331485282]

    #com:
    d1 = [0.0, 0.19921090736374347, 0.3829470448733844, 0.440868390023324, 0.454435913862103, 0.47775450511492307, 0.5304773728272272, 0.5778960233333174, 0.7176318657028085, 0.7365856738341475, 0.7429597421322155, 0.7529164468629947, 0.7572837121954319, 0.757769481914746, 0.75997742530503, 0.7633978872314695, 0.7636393613395813, 0.7635879554701299, 0.7685411279521015, 0.7686130856940708, 0.7727625643917542, 0.7729096662633564, 0.7746198015037666, 0.7747852769973647, 0.7747818062967224, 0.7748209308970369, 0.7764353686106971, 0.7765638601555622, 0.7797997658257764, 0.7812638671680389, 0.7812458517704909, 0.7829973335907271, 0.7832437910425599, 0.7833251582497937, 0.7833809036726684, 0.7847066874358618, 0.7848377687145149, 0.7848810274229627, 0.7847968032955995, 0.7848403050259547, 0.7848827228669202]
    d2 = [0.0, 0.19935441791366548, 0.3097971914868003, 0.32576946791147937, 0.3325553663851522, 0.3527045808199162, 0.39663678904809657, 0.43648806806827667, 0.5711019603156178, 0.5924683830953219, 0.5986800207527726, 0.6107880839841611, 0.6151368431419129, 0.6154643217986515, 0.6172955236988417, 0.6208817634939938, 0.6211852954895998, 0.621265563248188, 0.6259960777429796, 0.6261760397196885, 0.6303110436985992, 0.630581238654306, 0.6321029315072203, 0.6324384680425457, 0.6325655547815877, 0.6325903709120346, 0.634166004502779, 0.6343396068716947, 0.6376174281880133, 0.6390231304095423, 0.6391738468317415, 0.6408193497708109, 0.640967559891207, 0.6410905954862998, 0.641078651402713, 0.6424814726217867, 0.6424969033759171, 0.6425552467301323, 0.6424271079619945, 0.6424867327042819, 0.6424592668434156]
    
    s1 = 0
    s2 = 0
    for i in range(1, len(d1)):
        s1 += d1[i]
        s2 += d2[i]
    a1 = s1 / 40.0
    a2 = s2 / 40.0
    print(a1, a2)
    print(a1 / a2)

    t = [i for i in range(41)]
    
    #Active, Recommendation, Comprehensive
    plt.xlabel('Time')
    plt.ylabel('Active trust difference')
    
    #plt.plot(t, d1, color = '#fd5956', linestyle = '-', marker = '^', linewidth = 1, markersize = 5, label = 'LVT-DCA $\overline{D}_{act}$')
    #plt.plot(t, d2, color = 'k', linestyle = '-', marker = 'h', linewidth = 1, markersize = 5, label = 'UAV only collects $\overline{D}_{act}$')
    
    #plt.plot(t, d1, color = '#fd5956', linestyle = '-', marker = '^', linewidth = 1, markersize = 5, label = 'LVT-DCA $\overline{D}_{rec}$')
    #plt.plot(t, d2, color = 'k', linestyle = '-', marker = 'h', linewidth = 1, markersize = 5, label = 'UAV only collects $\overline{D}_{rec}$')
    
    plt.plot(t, d1, color = '#fd5956', linestyle = '-', marker = '^', linewidth = 1, markersize = 5, label = 'LVT-DCA $\overline{D}_{com}$')
    plt.plot(t, d2, color = 'k', linestyle = '-', marker = 'h', linewidth = 1, markersize = 5, label = 'UAV only collects $\overline{D}_{com}$')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.15)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0., 0.82)
    
    plt.legend(loc=0, framealpha = 0.5, fontsize = 19)#'xx-large') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('tpro.png')
    plt.show()
#Draw_diff()

def Draw_Tcom():
    tabn1_act = [0.5, 0.4332022408006807, 0.3481856531276937, 0.3198674156009272, 0.314950764622772, 0.3043753486752265, 0.28515928382228517, 0.2647698466843201, 0.21278642695972377, 0.20629375518799928, 0.2046239714013813, 0.20020992692853817, 0.19644480971946648, 0.1961592595198521, 0.19593202564657844, 0.1960712104816656, 0.1960506684761951, 0.1962723914589585, 0.19291302781192232, 0.19292301908346848, 0.18871540272091542, 0.18867033457160676, 0.1886249530115311, 0.1885511073635801, 0.18860708693171702, 0.18858386364831428, 0.18867574209815377, 0.18862735205246522, 0.18522128966362514, 0.18546185704913568, 0.18556792963733393, 0.18546958855395956, 0.18532740659504807, 0.1852806774514079, 0.18522990896291452, 0.18559675248115814, 0.18555740432738282, 0.18554729165700282, 0.1856531185474063, 0.18564070853920175, 0.18559476105688957]
    tabn2_act = [0.5, 0.42948017182802034, 0.3776098177013404, 0.37384656524408283, 0.37407608319821856, 0.3646278822685241, 0.3512831149790454, 0.3343729866381951, 0.28280312435477856, 0.2773067278081873, 0.27744805638685544, 0.27056035646058757, 0.26725851512582754, 0.2672111470608198, 0.2671949163195533, 0.2670095510800273, 0.2670470777840442, 0.2672596654772947, 0.26378709038614473, 0.2638133710568099, 0.25939373608444505, 0.25918993005061447, 0.25932438952056314, 0.25907881892595513, 0.25893571515090685, 0.2589255611450718, 0.2589619303697313, 0.25891985472103646, 0.2553367114654598, 0.25522171337154714, 0.25519351086552, 0.25514170725837304, 0.2552372505866888, 0.25511126309396, 0.25514228060461785, 0.2554316491102514, 0.2555538916309334, 0.2555199141003787, 0.2557358814392995, 0.25569433450582274, 0.25572677688462625]
    tn1_act = [0.5, 0.6359878950445049, 0.7412914608278246, 0.7722142069957196, 0.7815387794740025, 0.7948088405625958, 0.8301604335122421, 0.8578123442731753, 0.9513118661965893, 0.9608910307554297, 0.9644109522148431, 0.9700753643258123, 0.9702548566819106, 0.9702772138192614, 0.9721186980223064, 0.9756565689868002, 0.9757161949716445, 0.9757441090350181, 0.9775146774648649, 0.9775204450688413, 0.9775379754592021, 0.9775500681495403, 0.9792922304120576, 0.9793118703781191, 0.9793183707803457, 0.979319843163497, 0.9810762220120719, 0.9810817715039504, 0.9810844904267924, 0.9828395115889884, 0.9828484075425973, 0.9845584485045401, 0.9846062591526035, 0.9846103086642605, 0.9846120091855227, 0.9863662523926294, 0.9863711298320881, 0.9863722654416825, 0.9863753776623329, 0.9863777700399482, 0.9863787301211326]
    tn2_act = [0.5, 0.6359878950445049, 0.7046965162403684, 0.7147787846201624, 0.7202250504624517, 0.7314860509978337, 0.765853021910658, 0.791104011814271, 0.8848870032051657, 0.8949231343504979, 0.8984289678823454, 0.9044016248574631, 0.9046999818529992, 0.9047379919333464, 0.9065955770184561, 0.9101547139651165, 0.9102182931340989, 0.910257469570654, 0.9120357858193557, 0.9120431679179826, 0.9120680229738165, 0.9120863985773013, 0.9138294741862952, 0.913851363474711, 0.9138608983937059, 0.9138630220158008, 0.915620647300051, 0.9156278949554171, 0.9156314518664933, 0.917388714424642, 0.9173996422590552, 0.9191082303317762, 0.9191591876695527, 0.9191646787189959, 0.9191668855907849, 0.9209153160439104, 0.9209257140305493, 0.9209273130371082, 0.9209316478279856, 0.9209352014535721, 0.920936527567575]
    
    tabn1_rec = [0.5, 0.4489178539422858, 0.36797726290136473, 0.3501020388158112, 0.3560025830065729, 0.3460140293065474, 0.3261924909829235, 0.31227010264729876, 0.2694352519160899, 0.2688083038770436, 0.2688034231680617, 0.2691290027137269, 0.2657418969975707, 0.2657629385683595, 0.26437032440485597, 0.26372417015015415, 0.2640970144228888, 0.26377858945230326, 0.2605209138131929, 0.2609094236690303, 0.25695434677101736, 0.2567372049861993, 0.25665766189740724, 0.25669697137924646, 0.25668542593006793, 0.2567139125333047, 0.25639591392835526, 0.2564882127941248, 0.2539490854075678, 0.2541015950867436, 0.25420176179754334, 0.25402890116694754, 0.25401657901522806, 0.254015455174829, 0.2540472024403131, 0.25404900991728485, 0.2541026686489596, 0.2540780819759038, 0.2541665230002072, 0.25399177546674045, 0.2540333968835301]
    tabn2_rec = [0.5, 0.444873250431639, 0.3922017204018059, 0.39657863173019303, 0.39814395740987024, 0.38692453068620475, 0.37611030392120326, 0.36668738477576085, 0.3197988443614088, 0.3183625569214324, 0.31787036457830753, 0.3177014373477266, 0.3144548131483211, 0.3154303445292592, 0.31531772907386924, 0.31496285075223357, 0.31538719846136964, 0.3149448166382907, 0.3119954533246475, 0.31216483977789344, 0.3082127985849545, 0.3085112479613785, 0.3083563695442537, 0.3085274325278403, 0.3087600994194893, 0.30876258385399086, 0.30858946204620186, 0.3086530998610711, 0.3054605559577822, 0.3072340995433871, 0.3073176109467277, 0.307046192574374, 0.3068769193981485, 0.3069815683761308, 0.3070091549216775, 0.3066357329860316, 0.3068353295731319, 0.3068696616293154, 0.3067290439035042, 0.30661229586531485, 0.3066014114148573]
    tn1_rec = [0.5, 0.6159560393853029, 0.6594954423340301, 0.6876648164959192, 0.7010695879665285, 0.7096576534694532, 0.7259558720455833, 0.7538478576807747, 0.7990249558123855, 0.843289562111645, 0.8603180171690601, 0.8695045347682072, 0.8742885962898929, 0.8763961690211376, 0.8784645260736036, 0.8814348159186385, 0.8835008893596576, 0.8844126859690661, 0.8845173464577247, 0.8856634467413832, 0.8851768360439787, 0.885916265418361, 0.8868501803303356, 0.8877028742220429, 0.8881019342596345, 0.8882994058670293, 0.8891452808100629, 0.8900370392863812, 0.889177936796826, 0.8903413759084583, 0.8911359783550826, 0.8922024975189935, 0.8929448164228279, 0.8933003567570921, 0.8934173371635233, 0.8941903850726621, 0.8951568262517616, 0.8954635921434139, 0.8956342239218641, 0.8957612722195691, 0.8958049039745444]
    tn2_rec = [0.5, 0.615614447134028, 0.6328408836796953, 0.6616970937832716, 0.6763249202786984, 0.6830147598685474, 0.7010146214352356, 0.7222036244128406, 0.766973130537949, 0.8102388462287997, 0.8273468223602106, 0.8362767836810294, 0.8403731619491989, 0.8426445740324099, 0.8441927047724661, 0.8467910166818456, 0.8486288145091498, 0.8492814165057935, 0.848981060306701, 0.8501258509316457, 0.849070869520465, 0.8498315671261606, 0.8508506884174268, 0.8516295945455455, 0.8518871403562317, 0.8519645949312474, 0.8527846168388178, 0.8535189732820222, 0.8523687352937144, 0.853681747378719, 0.8543623195312943, 0.8552768491348154, 0.8560269705227272, 0.8562208833074858, 0.8563039919905744, 0.8571084283603286, 0.8578325568542536, 0.8580162995330591, 0.8580815181587319, 0.858082491595727, 0.8580587429001393]
    
    t = [i for i in range(41)]

    tabn1 = []
    tabn2 = []
    tn1 = []
    tn2 = []

    p1 = 0.5
    p2 = 0.5
    for i in range(len(tabn1_act)):
        tabn1.append(p1 * tabn1_act[i] + p2 * tabn1_rec[i])
        tabn2.append(p1 * tabn2_act[i] + p2 * tabn2_rec[i])
        tn1.append(p1 * tn1_act[i] + p2 * tn1_rec[i])
        tn2.append(p1 * tn2_act[i] + p2 * tn2_rec[i])

    plt.xlabel('Time')
    plt.ylabel('Comprehensive Trust')
    
    plt.plot(t, tabn1, color = '#152eff', linestyle = '-', marker = '^', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{mal}$')
    plt.plot(t, tn1, color = '#04f489', linestyle = '-', marker = 'o', linewidth = 1, markersize = 4, label = 'LVT-DCA $\overline{T}_{nor}$')
    
    plt.plot(t, tabn2, color = '#001146', linestyle = '-', marker = '*', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{mal}$')
    plt.plot(t, tn2, color = '#005249', linestyle = '-', marker = 'd', linewidth = 1, markersize = 4, label = 'UAV only collects $\overline{T}_{nor}$')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.1)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0.15, 1.)

    d_act_n = []
    d_act_o = []
    for i in range(0, 41):
        d_act_n.append(tn1[i] - tabn1[i])
        d_act_o.append(tn2[i] - tabn2[i])
    print(d_act_n)
    #print(d_act_o)
    
    plt.legend(loc = 0, framealpha = 0.5, fontsize = 25)#'xx-large') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('tcom.png')
    plt.show()
#Draw_Tcom()

def Draw_diff_para():
    r0 = [0.0, 0.18491191984342065, 0.3423119935663982, 0.3949547845374502, 0.4058275099055931, 0.4270385580251375, 0.47238226537630845, 0.5173101263111657, 0.6340575715665806, 0.664539266901016, 0.6756507874072302, 0.6851204847258772, 0.6911783731273831, 0.6923755923760937, 0.6951404370222378, 0.6986480021368094, 0.699534700716109, 0.7000529070464112, 0.7042990411487372, 0.7046757245288628, 0.7085225310056239, 0.7090293970050475, 0.7104298979167274, 0.7108833329286677, 0.7110638960890976, 0.7111607364244537, 0.7125749233978129, 0.7130016229718708, 0.7155460260762128, 0.7168087176807837, 0.7171073472314013, 0.7186312281513133, 0.7191035449825776, 0.7193072663975579, 0.7193761174729092, 0.7204554375334242, 0.7209339415537536, 0.7211052419760948, 0.7210949800182918, 0.7212532791267875, 0.7212777380776287]
    r1 = [0.0, 0.18848666672350128, 0.3524707563931446, 0.4064331859089185, 0.4179796108947206, 0.4397175447975839, 0.4869060422390381, 0.5324566005667035, 0.6549511451006376, 0.6825508686342987, 0.6924780260884764, 0.7020694752601566, 0.7077047078943953, 0.7087240647607567, 0.7113496840929359, 0.7148354734104745, 0.7155608658719772, 0.715936669152341, 0.7203595628495782, 0.7206600648201649, 0.7245825393521566, 0.7249994643196248, 0.7264773738134871, 0.7268588189458418, 0.7269933736410037, 0.7270757850425995, 0.728540034701034, 0.7288921822677936, 0.7316094610136037, 0.7329225050525975, 0.7331419733661737, 0.7347227545111666, 0.7351386064975731, 0.7353117393606168, 0.735377314022849, 0.7365182500090337, 0.7369098983439439, 0.7370491883378119, 0.7370204358376187, 0.7371500356015793, 0.7371789842749515]
    r2 = [0.0, 0.19206141360358203, 0.3626295192198913, 0.4179115872803871, 0.4301317118838481, 0.45239653157003024, 0.5014298191017679, 0.5476030748222414, 0.6758447186346945, 0.7005624703675817, 0.7093052647697227, 0.7190184657944361, 0.7242310426614075, 0.7250725371454199, 0.7275589311636338, 0.7310229446841395, 0.7315870310278452, 0.7318204312582705, 0.7364200845504194, 0.7366444051114668, 0.7406425476986891, 0.7409695316342019, 0.742524849710247, 0.7428343049630161, 0.74292285119291, 0.7429908336607453, 0.744505146004255, 0.7447827415637164, 0.7476728959509945, 0.7490362924244113, 0.7491765995009461, 0.7508142808710201, 0.7511736680125687, 0.7513162123236757, 0.7513785105727888, 0.7525810624846431, 0.7528858551341342, 0.7529931346995289, 0.7529458916569456, 0.7530467920763712, 0.7530802304722743]
    r3 = [0.0, 0.19563616048366284, 0.37278828204663783, 0.42938998865185557, 0.4422838128729755, 0.4650755183424766, 0.5159535959644975, 0.5627495490777794, 0.6967382921687516, 0.7185740721008645, 0.7261325034509691, 0.7359674563287155, 0.7407573774284197, 0.741421009530083, 0.743768178234332, 0.7472104159578046, 0.7476131961837135, 0.7477041933642002, 0.7524806062512605, 0.7526287454027688, 0.7567025560452216, 0.7569395989487792, 0.7585723256070069, 0.7588097909801904, 0.7588523287448163, 0.758905882278891, 0.7604702573074761, 0.7606733008596395, 0.7637363308883854, 0.7651500797962252, 0.7652112256357186, 0.7669058072308736, 0.7672087295275642, 0.7673206852867347, 0.7673797071227286, 0.7686438749602525, 0.7688618119243247, 0.7689370810612459, 0.7688713474762727, 0.7689435485511629, 0.7689814766695973]
    r4 = [0.0, 0.19921090736374347, 0.3829470448733844, 0.440868390023324, 0.454435913862103, 0.47775450511492307, 0.5304773728272272, 0.5778960233333174, 0.7176318657028085, 0.7365856738341475, 0.7429597421322155, 0.7529164468629947, 0.7572837121954319, 0.757769481914746, 0.75997742530503, 0.7633978872314695, 0.7636393613395813, 0.7635879554701299, 0.7685411279521015, 0.7686130856940708, 0.7727625643917542, 0.7729096662633564, 0.7746198015037666, 0.7747852769973647, 0.7747818062967224, 0.7748209308970369, 0.7764353686106971, 0.7765638601555622, 0.7797997658257764, 0.7812638671680389, 0.7812458517704909, 0.7829973335907271, 0.7832437910425599, 0.7833251582497937, 0.7833809036726684, 0.7847066874358618, 0.7848377687145149, 0.7848810274229627, 0.7847968032955995, 0.7848403050259547, 0.7848827228669202]
    
    t = [i for i in range(41)]
    #'$\overline{W_{1}}$= 0.7,$\overline{W_{2}}$=0.2,$\overline{W_{3}}$=0.1'
    plt.plot(t, r0, color = 'silver', linestyle = '-', marker = '*', linewidth = 1, markersize = 4, label = '${W}_{act}$= 0.5, ${W}_{rec}$= 0.5')
    plt.plot(t, r1, color = 'limegreen', linestyle = '-', marker = 'H', linewidth = 1, markersize = 4, label = '${W}_{act}$= 0.6, ${W}_{rec}$= 0.4')
    plt.plot(t, r2, color = 'dodgerblue', linestyle = '-', marker = '^', linewidth = 1, markersize = 4, label = '${W}_{act}$= 0.7, ${W}_{rec}$= 0.3')
    plt.plot(t, r3, color = 'k', linestyle = '-', marker = 'o', linewidth = 1, markersize = 4, label = '${W}_{act}$= 0.8, ${W}_{rec}$= 0.2')
    plt.plot(t, r4, color = 'darkorange', linestyle = '-', marker = 'v', linewidth = 1, markersize = 4, label = '${W}_{act}$= 0.9, ${W}_{rec}$= 0.1')

    #plt.title('Comprehensive trust difference')
    plt.xlabel('Time')
    plt.ylabel('The difference of comprehensive trust')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.15)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 0.8)
    
    plt.legend(loc = 0, framealpha = 0.5, fontsize = 'xx-large') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'x-large') 
    #plt.savefig('diff_par.png')
    plt.show()
#Draw_diff_para()                   

def Draw_init():
    r1 = [0, 0.13406037364490175, 0.28633975590628824, 0.33623698053926626, 0.34922795336058393, 0.40484736377805, 0.5022919797731324, 0.55802913819837, 0.7112389956173295, 0.7301081557217405, 0.7354181854034095, 0.7455363798889348, 0.7500602977898105, 0.750656119874533, 0.7529509316489245, 0.7568722449721004, 0.756843721023806, 0.7567327285584539, 0.762343771165896, 0.7622729249030187, 0.766450782664061, 0.7664506148837665, 0.7682134254870292, 0.7684961603062613, 0.7684554293177721, 0.7683203670414338, 0.7701016422126001, 0.7702193101532553, 0.7734239051155797, 0.7746199379189123, 0.7745512227545893, 0.7763417359703764, 0.776663047517475, 0.7766458950722028, 0.7765819793249634, 0.7782686429033524, 0.7783683400829415, 0.7783541771708287, 0.7782693866548622, 0.7782225991127778, 0.778156113779175]
    r2 = [0, 0.13891086114357093, 0.2823501985532006, 0.33386201609116856, 0.35250101624844693, 0.4157127095262349, 0.50800850503343, 0.5614383555937025, 0.7205704582338694, 0.7374014135710776, 0.7448252096965483, 0.7542811191465918, 0.7588461782806375, 0.7588057069225602, 0.7603831853342853, 0.7645124553018909, 0.7645184636904391, 0.7644780224458211, 0.7702207074302105, 0.770132185130429, 0.7736635410050401, 0.7736614128484871, 0.7753703157907443, 0.7753256175053735, 0.7751725351374142, 0.7751342975634661, 0.7770309048350382, 0.7770178197756739, 0.7805045472254396, 0.7825798125619559, 0.7825427210383218, 0.7842712327535415, 0.7840735184367698, 0.7841299119447955, 0.784105456670516, 0.7854341825239951, 0.7854480418370337, 0.7853683989197038, 0.7851918213427624, 0.7852704697614465, 0.7852498631019307]
    r3 = [0, 0.15612744537179868, 0.29662628284091275, 0.35372000076212945, 0.39636832383711645, 0.47501723868603446, 0.5330476734142198, 0.5800628049581591, 0.7284233885933371, 0.7482635154907348, 0.7537143142299623, 0.7650375180029354, 0.7687075995929296, 0.769006280661311, 0.7706437868427949, 0.7742501723722578, 0.7745554808301105, 0.7744110152859442, 0.779751600996903, 0.7799615810505975, 0.7837127682714686, 0.7838414380384888, 0.7856591221465934, 0.7856973924200742, 0.78568515564607, 0.7856807559752803, 0.7874718811833119, 0.7874202074847704, 0.7906729613933396, 0.7922812926289716, 0.7921926049753469, 0.7937698880732513, 0.7940405936946976, 0.7939994494854703, 0.7939167843912487, 0.7957542098361804, 0.7958597447461605, 0.7958472069679751, 0.7957937335779317, 0.7957950015315558, 0.7957670314396255]
    r4 = [0, 0.17292712151740836, 0.30168589348941244, 0.40003563299600114, 0.452872168113395, 0.48751342827032634, 0.5391580435056704, 0.5839983543095347, 0.7299289342375331, 0.7491645227168048, 0.7543858499565101, 0.7646556201380986, 0.7694133771078804, 0.7687962661349088, 0.7706390906175935, 0.7741845549080356, 0.7743076972640554, 0.7743092706358985, 0.7793781840883842, 0.7797110870456005, 0.7833902957149861, 0.7835417288640385, 0.7852325727162157, 0.7852970679009019, 0.7853779459221935, 0.7853287171307726, 0.787148903021023, 0.7871168553882939, 0.7907712761120054, 0.7920799746402089, 0.7921738695360182, 0.7938121136053629, 0.7941972806753963, 0.7941254589087454, 0.7941011725264884, 0.7961940141062234, 0.7962169394346166, 0.7962067973655641, 0.7962627449364711, 0.7962508847890193, 0.7962429227882977]
    
    t = [i for i in range(41)]
    
    fig = plt.figure()
    #'$\overline{W_{1}}$= 0.7,$\overline{W_{2}}$=0.2,$\overline{W_{3}}$=0.1'
    plt.plot(t, r1, color = 'red', linestyle = '-', marker = 'H', linewidth = 1, markersize = 2, label = '$init = 20$')
    plt.plot(t, r2, color = 'dodgerblue', linestyle = '-', marker = '^', linewidth = 1, markersize = 2, label = '$init = 25$')
    plt.plot(t, r3, color = 'k', linestyle = '-', marker = 'o', linewidth = 1, markersize = 2, label = '$init = 30$')
    plt.plot(t, r4, color = 'darkorange', linestyle = '-', marker = 'v', linewidth = 1, markersize = 2, label = '$init = 35$')

    #plt.title('Comprehensive trust difference')
    plt.xlabel('Time')
    plt.ylabel('Active trust difference')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.15)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 0.82)
    
    pic = plt.legend(loc = 0, framealpha = 0.5, fontsize = 22)#'xx-large') 
    pic.legendHandles[0]._sizes = [30]
    pic.legendHandles[1]._sizes = [30]
    pic.legendHandles[2]._sizes = [30]
    pic.legendHandles[3]._sizes = [30]
    '''
    t = [i for i in range(36,41)]
    a = []
    b = []
    c = []
    d = []
    for i in range(36,41):
        a.append(r1[i])
        b.append(r2[i])
        c.append(r3[i])
        d.append(r4[i])
    
    left, bottom, width, height =  0.6,0.5,0.25,0.25
    ax1 = fig.add_axes([left,bottom,width,height])
    ax1.plot(t, a, 'y^-', linewidth = 1, markersize = 4)
    ax1.plot(t, b, 'g*-', linewidth = 1, markersize = 4)
    ax1.plot(t, c, 'b+-', linewidth = 1, markersize = 4)
    ax1.plot(t, d, 'mx-', linewidth = 1, markersize = 4)
    '''
    #ax1.set_xlabel('Time')
    #ax1.set_ylabel('Active trust difference')
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'x-large') 
    #plt.savefig('diff_par.png')
    plt.show()
Draw_init()


def Draw_UVA():
    pre_cost = [116531.80381085604, 113336.17996103749, 96603.16711193847, 118811.38159771217, 138357.6451843849, 113996.09374312431, 113311.87984335341, 118309.42571949214, 100675.21768961044, 129944.62848123, 138228.53321132663, 122958.05435991532, 119508.90886514957, 86217.35126497461, 93885.17619445582, 129945.5548567353, 142827.8394655861, 121569.64368961455, 113721.37918333842, 89981.3782833402, 94308.79544589212, 133651.12771291932, 134040.52791481765, 124584.71750192437, 120287.27117825205, 91076.09544773966, 93639.93613104339, 131535.34252913034, 143811.15293851012, 118831.64347181168, 113456.30360604366, 92792.96774086289, 95797.64358673776, 131328.02241016217, 134278.63627448626, 121214.17750605664, 114227.11534885342, 93326.8917883271, 97405.10734013481, 133234.78665888155]
    now_cost = [118771.9785290998, 115192.63034532132, 98355.12504915283, 120389.86372833028, 140562.16180616262, 116414.71435618898, 114986.43462662614, 119911.09234846062, 101862.72320416756, 130884.98811649962, 140489.42769645576, 124016.78483583161, 120505.18606346379, 87110.84556980125, 95010.61046717223, 130841.57378776779, 145165.71498798742, 122810.12418771496, 115161.84139389455, 90365.34101319114, 95288.88539106082, 135016.2071804843, 135838.29468736902, 125288.585346676, 121047.00761749646, 92445.70874456018, 94877.67745853882, 132509.47392617931, 145990.62399917023, 119270.4007153126, 114667.88274026278, 93281.99956280677, 96788.34472723641, 132126.5794864386, 135492.98696981964, 121806.0385811642, 115602.271818605, 94590.66662662145, 98502.3032578125, 133942.25993754953]

    CR = []
    for i in range(0, 40):
        CR.append(now_cost[i] / pre_cost[i])
    
    print(min(CR), max(CR))
    pre_sensor = [34, 34, 32, 34, 34, 32, 34, 34, 33, 34, 34, 34, 34, 32, 33, 34, 34, 34, 34, 32, 33, 34, 34, 34, 34, 33, 33, 34, 34, 34, 34, 33, 33, 34, 34, 34, 34, 33, 33, 34]
    now_sensor = [56, 56, 59, 60, 62, 55, 49, 51, 50, 48, 54, 49, 48, 43, 44, 47, 54, 50, 47, 42, 44, 46, 49, 43, 43, 42, 45, 43, 49, 40, 44, 42, 43, 41, 46, 40, 47, 42, 42, 39]

    SR = []
    for i in range(0, 40):
        SR.append(now_sensor[i] / pre_sensor[i])

    #LR = CR / SR
    LR = []
    for i in range(0, 40):
        LR.append(CR[i] / SR[i])
    
    t = [i for i in range(1, 41)]

    plt.plot(t, SR, color = '#152eff', linestyle = '-', marker = '^', linewidth = 1, markersize = 4, label = 'SR')
    plt.plot(t, CR, color = '#04f489', linestyle = '-', marker = 'o', linewidth = 1, markersize = 4, label = 'CR')
    plt.plot(t, LR, color = '#001146', linestyle = '-', marker = '*', linewidth = 1, markersize = 4, label = 'LR')
    
    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.5)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 1.9)
    
    plt.legend(loc = 0, framealpha = 0.5, fontsize = 'xx-large') 
    plt.show()
Draw_UVA()

def Draw_lamda():
    #d1 = [0.5, 0.43881640422777823, 0.3784662144921681, 0.34529240543479794, 0.3414223559697128, 0.32937877257115705, 0.3168996716014262, 0.30301869823597255, 0.26349993211682443, 0.255640310907968, 0.25202166138765475, 0.24950383820227967, 0.24640402867550884, 0.2465930395419307, 0.2464704660596016, 0.2465177551958442, 0.24658575741541222, 0.24675983821676511, 0.2438061971321768, 0.2439444069550721, 0.24157487450181903, 0.241487039787599, 0.24151320797896977, 0.2416239406466259, 0.24157570382597296, 0.24156594273794887, 0.24155175337466517, 0.24158668078503337, 0.23890336828633596, 0.2375134960556622, 0.23742180354312512, 0.2374113516586874, 0.23726964753128987, 0.23710086217118737, 0.23715809867122647, 0.2373476185799538, 0.23722105582857542, 0.23713709483844786, 0.23705831781285064, 0.23710640974715222, 0.23711360291115066]
    #d2 = [0.5, 0.4370066611619165, 0.3596797421969833, 0.32917117859249617, 0.3324195129175481, 0.3224477703318443, 0.3089269085054822, 0.2931165905213333, 0.251115761339941, 0.24295275530628674, 0.24144357631320248, 0.23617211144895525, 0.23237002342303464, 0.23189732554908582, 0.23215261099260034, 0.23225960916436353, 0.23197884150370743, 0.23215868991454824, 0.22907734047043526, 0.2287975439230093, 0.22488000048335424, 0.22477739219416384, 0.22489245481745337, 0.22490219242226084, 0.22497403138636432, 0.2250216627024546, 0.22484109835438848, 0.22475427866159947, 0.22220948145064717, 0.22215889148017195, 0.22218070135578621, 0.22222068924071645, 0.222403053846283, 0.2223641961543339, 0.2222893813157374, 0.2224583702651599, 0.22246797934105464, 0.22250828814928322, 0.2224023071942153, 0.2223031700167102, 0.22232146647223622]
    #d3 = [0.5, 0.4378042966001244, 0.36022623165013556, 0.33581957645019234, 0.3316411339124814, 0.3152365171314175, 0.3003363875709175, 0.2827342572224402, 0.23748599753662844, 0.23011014005243038, 0.22670993469522022, 0.22457731506937176, 0.2212096136424835, 0.22126688935973682, 0.2215712397965966, 0.2214423604424381, 0.2214213008064296, 0.22137586476482618, 0.21805295083248113, 0.21816278416185245, 0.2150344497880055, 0.21501162468057872, 0.2148940075537696, 0.21496769109552577, 0.2147759942253583, 0.21473551360797832, 0.21470038488799084, 0.21463740480635493, 0.21114818292186213, 0.21142720576744772, 0.21143281401610742, 0.211494952030804, 0.21182704556002147, 0.21184923817832382, 0.21185542241115943, 0.21148581289807278, 0.21153989589298028, 0.21150130470613807, 0.2114972969283176, 0.2114696702405921, 0.21149529046106652]
    #d4 = [0.5, 0.4321132816176335, 0.34855931355705017, 0.31420103573217456, 0.31187888849301265, 0.3038458503145166, 0.2904281258485264, 0.2741287160524349, 0.22912261811175133, 0.21941194280184312, 0.21564158161735092, 0.21352773846586567, 0.20963044122396096, 0.20967110653542487, 0.20935721081439962, 0.20938301190929104, 0.20943145947462244, 0.20985972118673493, 0.20671791998671066, 0.20627796620282654, 0.20238861161737068, 0.20247398771917105, 0.20244024074300435, 0.2025030756455798, 0.20260848236654433, 0.20259460851755254, 0.2025984006206538, 0.20268992831676305, 0.20019107596119098, 0.19953717109000607, 0.19942774813990244, 0.1994468673731154, 0.1992928638665291, 0.19933686087693978, 0.19941951721958417, 0.1994275378619616, 0.19941833065922587, 0.19941474735013248, 0.1993205426929016, 0.1992725548926143, 0.19932671372264474]
    #d5 = [0.5, 0.4323844786314799, 0.34860513330149695, 0.3128904717103451, 0.3106620972945707, 0.2964150437053911, 0.27956043476496667, 0.2595250122836336, 0.2092728383974719, 0.20304517080919887, 0.20138091594988336, 0.19625529903762928, 0.19280375515489953, 0.19278799820118298, 0.19252847060304737, 0.19256184145552946, 0.19263401393785454, 0.19235011204159597, 0.18877689190357957, 0.18889027797030727, 0.18799807213045697, 0.18810695162798205, 0.18813813832371737, 0.18800249883854628, 0.1879132430949304, 0.18788376836186746, 0.18789991501477846, 0.18791797440406274, 0.18413516999078108, 0.18225941927926795, 0.18231412250102746, 0.1822500720381411, 0.18205986088395884, 0.18205402082362368, 0.18201108752474257, 0.18181614074850821, 0.1817807348363873, 0.18180614802992862, 0.18190402151231433, 0.18188891297061344, 0.18185308026295624]
    d6 = [0, 0.21096517797268566, 0.39088072313204864, 0.4631074275803172, 0.4769820956714776, 0.5038876374756538, 0.5517354456028596, 0.5980015599707279, 0.7421573504635851, 0.760497760622449, 0.7636780220461813, 0.7776821545069124, 0.7808538090762515, 0.7809334728268792, 0.7824028526078637, 0.7857784677072432, 0.785856158921586, 0.7859236118631903, 0.7913734128052982, 0.7913217215642921, 0.7948867881591164, 0.7948645147200702, 0.796612669164639, 0.7966323782490908, 0.7966721501525391, 0.7966545966091986, 0.7984521604737654, 0.7984278957052148, 0.8028046299063472, 0.8039983709661052, 0.8040363438407278, 0.8057796839283395, 0.805788603951617, 0.8058294318609519, 0.8058193941443165, 0.8076366768503369, 0.8076074670226123, 0.8075711540742336, 0.8073639387263056, 0.8074066632674634, 0.8074438612579824]
    d5 = [0, 0.20628520692004282, 0.38939098219068435, 0.45339775733961285, 0.47446077842511997, 0.4938518629953149, 0.5440803294095766, 0.590908811986073, 0.7349495194020307, 0.7513796047715626, 0.7565973911595307, 0.7659915356216419, 0.7703191355431982, 0.7705714423278759, 0.7725958784629352, 0.7759591569172679, 0.776060295674845, 0.7760726526298827, 0.7812043853956296, 0.7812627996140245, 0.7851645594355944, 0.7850719062993087, 0.7868706018015938, 0.7869674409205393, 0.7868943977309377, 0.78690920678816, 0.7887015898382851, 0.7887860949547032, 0.792587537873355, 0.7938961067617895, 0.79399099373564, 0.7957160907330918, 0.7959653128880726, 0.7959301308493183, 0.7959780632192937, 0.7977164094663003, 0.7978290391176763, 0.7978936703082616, 0.7979450530182043, 0.7979929651727959, 0.7979716545886311]
    d4 = [0, 0.20111071542090242, 0.38602670530043764, 0.4490049049066734, 0.46570998194173624, 0.4888654563702974, 0.5403617263973017, 0.5880879143062834, 0.7286959309010788, 0.7460058087321916, 0.7532297620466339, 0.7615711024122259, 0.7650418505684902, 0.7650298051774601, 0.7669760952986944, 0.7703796307657862, 0.7703619688826675, 0.7703854492291965, 0.7754750706206479, 0.7757907262732953, 0.7784521342628872, 0.7784091895991534, 0.7800760783367247, 0.7800337881062627, 0.7800511498456187, 0.780036249266056, 0.781690545444156, 0.7816266949639068, 0.7852917932519424, 0.7873961457988743, 0.7874356184850272, 0.78922006744047, 0.7892766883089989, 0.7891816054671461, 0.7892176479974373, 0.7908671281640683, 0.7908602505854212, 0.7909471336483526, 0.791133659365613, 0.7911354194378405, 0.7911789388340494]
    d3 = [0, 0.20166871045614398, 0.37753726031434043, 0.44497755565434594, 0.4599731951745358, 0.48784567348422586, 0.5331982045370158, 0.5787193239174879, 0.7179847808089606, 0.7349056348242764, 0.7422423007985606, 0.7480150098056051, 0.75424674503146, 0.7540502399265658, 0.7557791917871957, 0.7592689528841421, 0.759188913348155, 0.7590254384922979, 0.7637927254097829, 0.7640506665228202, 0.7665439451868232, 0.7664145318510589, 0.7680769865062335, 0.7682258484200414, 0.768209186965104, 0.7682177461990427, 0.7699899635784488, 0.7699821367146193, 0.7738638751217676, 0.7764145446421129, 0.7764826654792258, 0.7782001682564336, 0.7781822282331977, 0.7782413598274324, 0.7782268423851519, 0.7795141599189792, 0.7796444720054959, 0.7796822374254575, 0.7795045332517967, 0.7794312746118559, 0.7794436661452522]
    d2 = [0, 0.1976124763031053, 0.3758908120452403, 0.42798031021983945, 0.4431691106251179, 0.4644991838306635, 0.5204796750100154, 0.5649001314590854, 0.7032908132720656, 0.7196194233097504, 0.7267954716043465, 0.7365432279107196, 0.7391395815591009, 0.7389455633794223, 0.7407922240662548, 0.7441283037172921, 0.7442725420832667, 0.7443218892933106, 0.7488208699780052, 0.7489557448608107, 0.7518236038665329, 0.7519188040212405, 0.753663735481959, 0.7537166870197407, 0.7539987758696463, 0.7540291753290127, 0.7557542126215657, 0.7557785450961158, 0.7590508780545127, 0.7603169084262682, 0.7603166221572837, 0.7619869191128258, 0.7623728747545864, 0.7623244909780096, 0.7623775444885521, 0.7642315283735922, 0.7642835462606807, 0.7643001161311631, 0.7642642352593425, 0.7641785784616502, 0.7641556242754317]

    t = [i for i in range(41)]
    #plt.plot(t, d6, color = 'silver', linestyle = '-', marker = '*', linewidth = 1, markersize = 3, label = '${λ}$= 1.6')
    plt.plot(t, d5, color = 'limegreen', linestyle = '-', marker = 'H', linewidth = 1, markersize = 3, label = '${λ}$= 1.5')
    plt.plot(t, d4, color = 'dodgerblue', linestyle = '-', marker = '^', linewidth = 1, markersize = 3, label = '${λ}$= 1.4')
    plt.plot(t, d3, color = 'k', linestyle = '-', marker = 'o', linewidth = 1, markersize = 3, label = '${λ}$= 1.3')
    plt.plot(t, d2, color = 'darkorange', linestyle = '-', marker = 'v', linewidth = 1, markersize = 3, label = '${λ}$= 1.2')

    plt.xlabel('Time')
    plt.ylabel('The difference of active trust')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.15)
    ax = plt.gca()
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 0.81)
    
    plt.legend(loc = 0, framealpha = 0.5, fontsize = 25)#'xx-large') 
    plt.show()
#Draw_lamda()
