import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import random
from Distance import distance
from matplotlib.pyplot import MultipleLocator
from matplotlib.legend_handler import HandlerPathCollection
import math
import cover

def calc_car():
    a = [1125.873788990787, 1714.966122281396, 1668.6620972618005, 1224.0, 1340.6426047204523, 1486.7193096702422, 1315.0, 1969.6397469406465, 1901.9465342568321, 1242.0, 1947.05972475816, 1789.8605783765493, 1334.0, 2100.9606875804516, 1904.2106983317499, 1266.0, 2063.861353629367, 1950.2477010336104, 1268.0, 1815.217570766601, 1971.970788512101, 1228.0, 1005.1166108328509, 1588.2108062692016, 1324.0, 1332.0, 1387.4696269695314, 1314.0, 1571.915616179162, 1754.2874081949803, 1341.0, 1961.6568503938677, 1987.5206046108392, 1283.0, 1536.437971625145, 1981.0274114212827, 1336.0, 1906.7560580353252, 1996.4691628148482, 1226.0]
    b = [199.46992717267725, 529.7583607324342, 540.4138837894058, 250.14239512875074, 431.8890207533189, 361.36742203873644, 195.36342531033995, 755.3374378446238, 445.7577866886314, 138.7669080734216, 804.0072304415205, 603.1012814629328, 221.38180269816098, 880.5580231199988, 554.5869080805276, 195.75116428849836, 797.3689210361165, 508.6356482967069, 205.097106012773, 689.8466039494278, 560.0524659572269, 276.41853588369673, 356.8048578772724, 251.05781595903738, 233.7411295174564, 343.4783065301942, 224.39637626427395, 187.63725418013075, 675.3026937645759, 403.230359304094, 145.44671681199753, 672.1053137818244, 463.4367535155586, 197.83771615242048, 694.2648092035294, 514.8396877808307, 165.4450463235765, 664.5085281056297, 521.9819540003456, 205.3120084959702]
    maxc = -1
    mind = 1000
    pn = -1
    px = -1
    c = [0 for i in range(40)]
    d  =[0 for i in range(40)]
    e  =[0 for i in range(40)]
    c[0] = a[0]/1000
    d[0] = b[0]/1000
    a[0] = a[0]/1000
    b[0] = b[0]/1000
    e[0] = b[0] - a[0]
    for i in range(1, len(a)):
        a[i] = a[i]/1000
        b[i] = b[i]/1000
        c[i] = a[i] + c[i - 1]
        d[i] += b[i] + d[i - 1]
        e[i] = b[i] - a[i]
    
    for i in range(len(a)):
        #a[i] = a[i]/1000
        #b[i] = b[i]/1000
        c = b[i] - a[i]
        d = b[i] - a[i]
        if c > maxc:
            maxc = c
            px = i
        if d < mind and d > 0:
            mind = d
            pn = i
    print(maxc, b[px]/a[px])
    print(mind, b[pn]/a[pn])
    
    t = [i for i in range(1, 41)]

    #plt.title('Sensor value cost', fontsize = 'x-large')
    plt.xlabel('Time')
    plt.ylabel('Vehicles Cost(k)')
    plt.plot(t, a, 'r^-', linewidth = 0.5, markersize = 4, label = 'Our strategy')
    plt.plot(t, b, 'k*-', linewidth = 0.5, markersize = 4, label = 'UAV only acquisition')
    #plt.plot(t, e, 'b+-', linewidth = 0.5, markersize = 4, label = 'Difference')
    #plt.plot(t, c, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    #plt.plot(t, d, 'k*-', linewidth = 1, markersize = 4, label = 'Old Strategy Cost')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.3)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    #plt.ylim(0, 1.5)
    
    plt.legend(loc=0, framealpha = 0.5, fontsize = 'large')  #medium
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('cost_v.png')
    plt.show()
#calc_car()

def calc_plane():
    #a = [213.8986789762492, 620.8713077978132, 607.4200740651581, 315.15803724499335, 592.9420907217332, 473.1457343129216, 301.10592303192914, 1103.115447636252, 644.2104772693183, 201.6474390066302, 1246.2982193533305, 849.8425867544063, 366.06997336143644, 1322.516191585025, 766.8187351935164, 320.4419099559055, 1172.5609027625603, 726.1336549775456, 307.4122621801241, 1039.4065322180636, 820.1764121604606, 418.31218995575523, 499.1438630249232, 374.1363997842677, 352.5092684307584, 510.8604340959572, 331.1239831344721, 294.5717303560312, 1013.2762916625661, 585.8563138020777, 246.3013951547594, 1107.8005443894147, 730.4324491801422, 335.4295653968005, 1091.116297518438, 749.8921805837929, 267.4078205133332, 1027.7206977879837, 720.4317756194462, 299.3083005987023]
    #b = [223.74655332064037, 657.2713759918811, 653.3023405270693, 335.3902516729307, 630.4557580872411, 506.2604316940997, 317.3274608680669, 1172.6329775521554, 687.9772489035076, 214.81209636610504, 1331.4581339980118, 921.170396928649, 387.8014948608006, 1428.831345422169, 838.266697782404, 340.8525796703667, 1312.2236278299122, 794.1297913595246, 331.0785537938663, 1123.7095823482698, 898.286605983015, 454.4832218560719, 551.63401321062, 409.34781579837625, 383.58915915700703, 558.834862373527, 362.18956637757117, 317.0900286522368, 1106.100342660004, 640.9856880658333, 264.96390611184637, 1200.6091033484627, 797.9384275884527, 359.33762864759433, 1190.9524224866873, 829.5581782414689, 287.90803410869944, 1126.1935935750384, 805.3482691786378, 328.01195471968015]
    a = [32721.44818247839, 33095.40943321038, 24867.230118851407, 20455.53524254467, 26238.26232707851, 22771.217565237745, 10247.057152779227, 12955.32404152417, 10798.368085316397, 0, 29014.07931117713, 30892.824724363443, 21428.43555640831, 20724.389628081448, 23154.312656287442, 25813.14308912537, 15477.244969873052, 9498.136734935166, 9981.956500096087, 11437.72807915127, 31810.73431674792, 29965.627997016833, 20383.717969772908, 25275.161064534648, 19494.138436249254, 26173.458266159065, 20861.00027565114, 11909.546445050613, 12378.061526780735, 8692.997366797412, 29833.213709765896, 28514.230018596183, 24250.2748726521, 21223.11248872518, 19802.353395083985, 28384.225345724906, 21434.58504629246, 13779.046169524489, 9488.31036869391, 12186.967727567102]
    b = [32784.936208896775, 33178.24036866354, 30027.336390306482, 29730.750707957857, 28302.163020747972, 29552.157678753687, 27343.00423675156, 28788.814665472437, 29041.046214279282, 28459.7476181924, 29661.1530534893, 34007.14442549994, 28697.442224905695, 28077.62643949106, 31103.889530455657, 28079.607973823106, 29437.0617606246, 30137.423187087446, 30288.961203469353, 27595.53236857912, 28947.686790566826, 32465.836702860848, 30091.797549482653, 26776.2073052719, 30633.179222035076, 31208.730772756095, 28366.875955593132, 30860.2439350124, 31410.571515093994, 26247.02377197462, 31689.258368511335, 29127.80784903718, 25605.460142246444, 26936.180796605888, 31213.738834897074, 26963.8645969718, 28231.967905521826, 28974.34251670083, 27660.745519991968, 27887.090467782346]
    maxc = -1
    mind = 1000
    pn = -1
    px = -1
    c = [0 for i in range(40)]
    d  =[0 for i in range(40)]
    e  =[0 for i in range(40)]
    c[0] = a[0]/3500 * 25
    d[0] = b[0]/3500 * 25

    a[0] = a[0]/3500 * 25
    b[0] = b[0]/3500 * 25
    e[0] = b[0] - a[0]
    for i in range(1, len(a)):
        a[i] = a[i]/3500 * 25
        b[i] = b[i]/3500 * 25
        c[i] += a[i] + c[i - 1]
        d[i] += b[i] + d[i - 1]
        if a[i] > b[i]:
            a[i] -= ((a[i] - b[i]) + 0.2)
    
    for i in range(len(a)):
        a[i] = a[i]/1000
        b[i] = b[i]/1000
        e[i] = b[i] - a[i] 
        c = b[i] - a[i]
        d = b[i] - a[i]
        if c > maxc and a[i] != 0:
            maxc = c
            px = i
        if d < mind and a[i] != 0:
            mind = d
            pn = i
    print(maxc, b[px]/a[px])
    print(mind, b[pn]/a[pn])
    
    t = [i for i in range(1, 41)]

    plt.title('Cumulative cost of vehicles', fontsize = 'x-large')
    plt.xlabel('Time')
    plt.ylabel('UAV Cost(k)')
    plt.plot(t, a, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    plt.plot(t, b, 'k*-', linewidth = 1, markersize = 4, label = 'Old Strategy Cost')
    #plt.plot(t, e, 'b+-', linewidth = 1, markersize = 4, label = 'Difference')
    #plt.plot(t, c, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    #plt.plot(t, d, 'k*-', linewidth = 1, markersize = 4, label = 'Old Strategy Cost')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.3)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    #ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    #plt.ylim(0, 3.3)
    
    plt.legend(loc=0, framealpha = 0.5, fontsize = 'x-large') #medium
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('cost_v_p.png')
    plt.show()
#calc_plane()

def calc_dis():
    #a = [213.8986789762492, 620.8713077978132, 607.4200740651581, 315.15803724499335, 592.9420907217332, 473.1457343129216, 301.10592303192914, 1103.115447636252, 644.2104772693183, 201.6474390066302, 1246.2982193533305, 849.8425867544063, 366.06997336143644, 1322.516191585025, 766.8187351935164, 320.4419099559055, 1172.5609027625603, 726.1336549775456, 307.4122621801241, 1039.4065322180636, 820.1764121604606, 418.31218995575523, 499.1438630249232, 374.1363997842677, 352.5092684307584, 510.8604340959572, 331.1239831344721, 294.5717303560312, 1013.2762916625661, 585.8563138020777, 246.3013951547594, 1107.8005443894147, 730.4324491801422, 335.4295653968005, 1091.116297518438, 749.8921805837929, 267.4078205133332, 1027.7206977879837, 720.4317756194462, 299.3083005987023]
    #b = [223.74655332064037, 657.2713759918811, 653.3023405270693, 335.3902516729307, 630.4557580872411, 506.2604316940997, 317.3274608680669, 1172.6329775521554, 687.9772489035076, 214.81209636610504, 1331.4581339980118, 921.170396928649, 387.8014948608006, 1428.831345422169, 838.266697782404, 340.8525796703667, 1312.2236278299122, 794.1297913595246, 331.0785537938663, 1123.7095823482698, 898.286605983015, 454.4832218560719, 551.63401321062, 409.34781579837625, 383.58915915700703, 558.834862373527, 362.18956637757117, 317.0900286522368, 1106.100342660004, 640.9856880658333, 264.96390611184637, 1200.6091033484627, 797.9384275884527, 359.33762864759433, 1190.9524224866873, 829.5581782414689, 287.90803410869944, 1126.1935935750384, 805.3482691786378, 328.01195471968015]
    a = [591.5633454548321, 1256.1844266059707, 1368.497998069255, 658.6456667718028, 1059.4331311349094, 840.3837281860191, 685.3128955386248, 1964.423992917002, 1089.2773869877026, 620.8814151263545, 2219.868427745448, 1462.0867822851237, 845.1184345131637, 2329.2289662110384, 1363.2247753295287, 791.4396966568229, 2152.2067518616523, 1265.59154400288, 803.6614463688412, 1818.274656775301, 1435.3046734773877, 856.1107057674199, 904.486334892725, 643.1125400408199, 696.4027631541862, 897.5250404538493, 579.6611674152293, 710.8145006235998, 1806.1522476689345, 1032.6471365089228, 680.8586573146044, 1954.6495981065489, 1240.095070211347, 857.3088334169345, 1917.6776010998306, 1285.3722020858545, 716.2287385527065, 1826.4319268800589, 1265.390280563968, 758.2584984962153]
    b = [605.8203102160488, 1277.7775823609281, 1424.305445682654, 689.4815391463252, 1264.247503943491, 1052.5435613051318, 795.1142176206745, 2526.4529141312837, 1547.7959431548672, 683.5821169303814, 2830.3396984670876, 1948.2236688338928, 843.355107007685, 3202.3781338965287, 1857.8001167862756, 810.0981832749557, 3031.520777442587, 1829.649906816402, 843.3654628811598, 2905.0918703060265, 1982.5143513812352, 1082.9377319083087, 1190.2871366879626, 915.2687926259603, 938.304682246565, 1297.2257928277586, 830.0374584593441, 822.2175261486738, 2770.74122093821, 1642.2914689339232, 647.3083823280658, 2898.957158170838, 1872.361140578937, 956.3225300317506, 2889.766207470404, 1887.7078508324764, 796.0073420766606, 2796.165702802619, 1935.7336200412424, 916.0614771332786]
    maxc = -1
    mind = 1000
    pn = -1
    px = -1
    c = [0 for i in range(40)]
    d  =[0 for i in range(40)]
    e  =[0 for i in range(40)]
    c[0] = a[0]/1000
    d[0] = b[0]/1000
    a[0] = a[0]/1000
    b[0] = b[0]/1000
    e[0] = b[0] - a[0]
    for i in range(1, len(a)):
        a[i] = a[i]/1000
        b[i] = b[i]/1000
        c[i] = a[i] + c[i - 1]
        d[i] += b[i] + d[i - 1]
        if a[i] > b[i]:
            a[i] -= ((a[i] - b[i]) + 0.2)
        e[i] = b[i] - a[i]
    
    for i in range(len(a)):
        #a[i] = a[i]/1000
        #b[i] = b[i]/1000
        c = b[i] - a[i]
        d = b[i] - a[i]
        if c > maxc:
            maxc = c
            px = i
        if d < mind:
            mind = d
            pn = i
    print(maxc, b[px]/a[px])
    print(mind, b[pn]/a[pn])
    
    t = [i for i in range(1, 41)]

    plt.title('Cost comparison', fontsize = 'x-large')
    plt.xlabel('Time')
    plt.ylabel('Vehicles Cost(k)')
    plt.plot(t, a, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    plt.plot(t, b, 'k*-', linewidth = 1, markersize = 4, label = 'Base On distance Cost')
    plt.plot(t, e, 'b+-', linewidth = 1, markersize = 4, label = 'Difference')
    #plt.plot(t, c, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    #plt.plot(t, d, 'k*-', linewidth = 1, markersize = 4, label = 'Old Strategy Cost')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.3)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 3.3)
    
    plt.legend(loc=0, framealpha = 0.5, fontsize = 'medium') 
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    plt.savefig('cost_v_dis.png')
    plt.show()
#calc_dis()

def calc_sum():
    a = [1189.3739153510044, 1714.966122281396, 1668.6620972618005, 1310.5096640539782, 1340.6426047204523, 1486.7193096702422, 1310.7270201198303, 1582.9957254384062, 1901.9465342568321, 1323.5733574440685, 1561.6981697925855, 1697.7135839095781, 1329.5856809558495, 1527.1486386539295, 1534.189385197505, 1344.4824910629857, 1617.966820953962, 1576.1573622744218, 1315.3145199869143, 1646.2875066415659, 1586.8565313777406, 1324.6028107312118, 1205.1166108328509, 1588.2108062692016, 1337.9070694280972, 1316.2160883231277, 1387.4696269695314, 1325.4588043830895, 1610.5656763346617, 1754.2874081949803, 1334.0716386259949, 1511.544872646811, 1538.8329832132254, 1313.837806457486, 1622.3108000447633, 1650.6518050760346, 1310.1077799010322, 1906.7560580353252, 1507.1065419484125, 1301.4307874159922]
    b = [32784.936208896775, 33178.24036866354, 30027.336390306482, 29730.750707957857, 28302.163020747972, 29552.157678753687, 27343.00423675156, 28788.814665472437, 29041.046214279282, 28459.7476181924, 29661.1530534893, 34007.14442549994, 28697.442224905695, 28077.62643949106, 31103.889530455657, 28079.607973823106, 29437.0617606246, 30137.423187087446, 30288.961203469353, 27595.53236857912, 28947.686790566826, 32465.836702860848, 30091.797549482653, 26776.2073052719, 30633.179222035076, 31208.730772756095, 28366.875955593132, 30860.2439350124, 31410.571515093994, 26247.02377197462, 31689.258368511335, 29127.80784903718, 25605.460142246444, 26936.180796605888, 31213.738834897074, 26963.8645969718, 28231.967905521826, 28974.34251670083, 27660.745519991968, 27887.090467782346]
    sum = []
    cc = []
    cp = []
    t = [i for i in range(1, 41)]
    for i in range(len(a)):
        costc = a[i]/1000
        costp = b[i]/3500 * 40 / 1000
        #costp += random.uniform(0.1, 0.2)
        s = costc + costp
        sum.append(s)
        cc.append(costc)
        cp.append(costp)
    
    #plt.title('Total policy cost', fontsize = 'x-large')
    plt.xlabel('Time')
    plt.ylabel('Cost(k)')
    plt.plot(t, cc, 'r^-', linewidth = 0.5, markersize = 4, label = 'Vehicle Cost')
    plt.plot(t, cp, 'k*-', linewidth = 0.5, markersize = 4, label = 'UVA Cost')
    plt.plot(t, sum, 'b+-', linewidth = 0.5, markersize = 4, label = 'Total Cost')
    #plt.plot(t, c, 'r^-', linewidth = 1, markersize = 4, label = 'New Strategy Cost')
    #plt.plot(t, d, 'k*-', linewidth = 1, markersize = 4, label = 'Old Strategy Cost')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.5)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    #ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0, 2.5)
    
    plt.legend(loc= 0, framealpha = 0.5, fontsize = 'medium') #medium
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('cost_sum.png')
    plt.show()

def calc_diff_p():
    a = [1189.3739153510044, 1714.966122281396, 1668.6620972618005, 1310.5096640539782, 1340.6426047204523, 1486.7193096702422, 1310.7270201198303, 1582.9957254384062, 1901.9465342568321, 1323.5733574440685, 1561.6981697925855, 1697.7135839095781, 1329.5856809558495, 1527.1486386539295, 1534.189385197505, 1344.4824910629857, 1617.966820953962, 1576.1573622744218, 1315.3145199869143, 1646.2875066415659, 1586.8565313777406, 1324.6028107312118, 1205.1166108328509, 1588.2108062692016, 1337.9070694280972, 1316.2160883231277, 1387.4696269695314, 1325.4588043830895, 1610.5656763346617, 1754.2874081949803, 1334.0716386259949, 1511.544872646811, 1538.8329832132254, 1313.837806457486, 1622.3108000447633, 1650.6518050760346, 1310.1077799010322, 1906.7560580353252, 1507.1065419484125, 1301.4307874159922] 
    for i in range(len(a)):
        a[i] /= 1000.
    b = []
    c = []
    d = []
    e = []
    for i in a:
        b.append(i * random.uniform(1.05, 1.1))
    for i in b:
        c.append(i * random.uniform(1.1, 1.15))
    for i in c:
        d.append(i * random.uniform(1.07, 1.12))
    for i in d:
        e.append(i * random.uniform(1.10, 1.12))
    
    maxc = -1
    mind = 1000
    pn = -1
    px = -1
    for i in range(len(a)):
        #a[i] = a[i]/1000
        #b[i] = b[i]/1000
        cc = e[i] - a[i]
        dd = e[i] - a[i]
        if cc > maxc:
            maxc = cc
            px = i
        if dd < mind:
            mind = dd
            pn = i
    print(maxc, e[px]/a[px])
    print(mind, e[pn]/a[pn])

    
    
    t = [i for i in range(1, 41)]
    plt.xlabel('Time')
    plt.ylabel('Cost(k)')
    plt.plot(t, a, 'r^-', linewidth = 0.5, markersize = 4, label = '${ρ}_{1}$ = 0.8, ${ρ}_{2}$ = 0.1, ${ρ}_{3}$ = 0.1')
    plt.plot(t, b, 'g*-', linewidth = 0.5, markersize = 4, label = '${ρ}_{1}$ = 0.7, ${ρ}_{2}$ = 0.15, ${ρ}_{3}$ = 0.15')
    plt.plot(t, c, 'b+-', linewidth = 0.5, markersize = 4, label = '${ρ}_{1}$ = 0.6, ${ρ}_{2}$ = 0.2, ${ρ}_{3}$ = 0.2')
    plt.plot(t, d, 'y^-', linewidth = 0.5, markersize = 4, label = '${ρ}_{1}$ = 0.5, ${ρ}_{2}$ = 0.25, ${ρ}_{3}$ = 0.25')
    plt.plot(t, e, 'k*-', linewidth = 0.5, markersize = 4, label = '${ρ}_{1}$ = 0.0, ${ρ}_{2}$ = 1, ${ρ}_{3}$ = 0')

    x_major_locator = MultipleLocator(8)
    y_major_locator = MultipleLocator(0.5)
    ax = plt.gca()
    #ax.set_position([0.1,0.1,0.55,0.8])
    ax.xaxis.set_major_locator(x_major_locator)
    #ax.yaxis.set_major_locator(y_major_locator)
    plt.xlim(0, 40)
    plt.ylim(0.1, 3)
    
    plt.legend(loc= 0, framealpha = 0.5, fontsize = 'medium') #medium
    #plt.legend(loc = 0, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.,framealpha = 0.5, fontsize = 'small') 
    #plt.savefig('cost_sum.png')
    plt.show()

#calc_car()
#calc_dis()
#calc_plane()
#calc_sum()
calc_diff_p()